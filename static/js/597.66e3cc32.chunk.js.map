{"version":3,"file":"static/js/597.66e3cc32.chunk.js","mappings":"yNA2CA,UAvCa,WACX,IAAMA,GAAKC,EAAAA,EAAAA,MAAYD,GACvB,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACGC,EAAAA,EAAAA,IAAwBP,EAAI,WAD/B,OACVG,EADU,OAEhBC,EAAQD,EAAKA,MAFG,2CAAH,qDAIfG,GAGD,GAAE,KAED,yBACGH,EAAKK,OAAS,GACb,wBACGL,EAAKM,MAAM,EAAE,IAAIC,KAChB,YAA4D,IAAzDC,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACtC,OACE,0BACGA,GAAe,gBACdC,IAAG,yCAAoCD,GACvCE,IAAKJ,EACLK,MAAM,SACJ,gDACJ,wBAAKL,KACL,uBAAKC,MAPEF,EAUZ,OAIL,wCAIP,C","sources":["components/Cast.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviewsOrCast } from 'services/fetchMovie';\n\nconst Cast = () => {\n  const id = useParams().id;\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    const fetchCast = async () => {\n      const cast = await fetchMovieReviewsOrCast(id, 'credits');\n      setCast(cast.cast)\n    }\n    fetchCast()\n    \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.slice(0,18).map(\n            ({ credit_id, original_name, character, profile_path }) => {\n              return (\n                <li key={credit_id}>\n                  {profile_path ?(<img\n                    src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                    alt={original_name}\n                    width=\"100\"\n                  />):<p>Nie za≈Çadowano</p>}\n                  <h4>{original_name}</h4>\n                  <p>{ character}</p>\n                </li>\n              );\n            }\n          )}\n        </ul>\n      ) : (\n        <p>Nie podano </p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["id","useParams","useState","cast","setCast","useEffect","fetchCast","fetchMovieReviewsOrCast","length","slice","map","credit_id","original_name","character","profile_path","src","alt","width"],"sourceRoot":""}