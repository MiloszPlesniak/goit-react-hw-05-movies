{"version":3,"file":"static/js/894.a9c7225a.chunk.js","mappings":"+KAsBA,UAnBiB,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,UACZC,GAAWC,EAAAA,EAAAA,MAEXC,EAAOF,EAASG,SAAWH,EAASI,OAE1C,OACE,0BACE,wBACGL,EAAUM,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GAC7B,OACE,SAAC,KAAD,CAAeC,GAAI,WAAaD,EAAIE,MAAO,CAAER,KAAAA,GAA7C,UACE,wBAAKI,GAASC,KADLC,EAId,OAIR,C,0HCgBD,UA/BqB,WACnB,OAAoCG,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SAE/BC,EAAqB,mCAAG,WAAMC,GAAN,uEAC5BA,EAAEC,iBACIC,EAAQF,EAAEG,OAAOC,MAAMC,MAC7BT,EAAgB,CAAEM,MAAAA,IAHU,2CAAH,sDAa3B,OARAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACKC,EAAAA,EAAAA,IAAqBX,GAD1B,OACVY,EADU,OAEhBhB,EAAcgB,GAFE,2CAAH,qDAIfF,GACD,GAAE,CAACV,KAGF,4BACE,kBAAMa,SAAUX,EAAhB,WACE,kBAAOZ,KAAK,WACZ,mBAAQwB,KAAK,SAAb,wBAEF,SAAC,KAAD,WACE,SAAC,KAAD,CAAOC,KAAK,IAAIC,SAAS,SAAC,UAAD,CAAWlC,UAAWa,UAItD,C","sources":["components/MovieList.jsx","components/MoviesSearch.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoveList = ({ movieData }) => {\n  const location = useLocation();\n\n  const from = location.pathname + location.search;\n  \n  return (\n    <div>\n      <ul>\n        {movieData.map(({ title, name, id }) => {\n          return (\n            <Link key={id} to={'/movies/' + id} state={{ from }}>\n              <li>{title || name}</li>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default MoveList;\n\nMoveList.propTypes = {\n  movieData: PropTypes.arrayOf(\n    PropTypes.objectOf(\n      PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.array,\n      ])\n    )\n  ),\n};\n","import { useState, useEffect } from 'react';\n\nimport { Route, Routes, useSearchParams } from 'react-router-dom';\nimport { fetchMovieForKeyword } from 'services/fetchMovie';\nimport MovieList from './MovieList';\n\nconst MoviesSearch = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchValue = searchParams.get('query');\n\n  const searchMovieForKeyword = async e => {\n    e.preventDefault();\n    const query = e.target.input.value;\n    setSearchParams({ query });\n  };\n  useEffect(() => {\n    const fetchList = async () => {\n      const movies = await fetchMovieForKeyword(searchValue);\n      setMoviesList(movies);\n    };\n    fetchList();\n  }, [searchValue]);\n\n  return (\n    <div>\n      <form onSubmit={searchMovieForKeyword}>\n        <input name=\"input\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <Routes>\n        <Route path=\"/\" element={<MovieList movieData={moviesList} />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default MoviesSearch;\n"],"names":["movieData","location","useLocation","from","pathname","search","map","title","name","id","to","state","useState","moviesList","setMoviesList","useSearchParams","searchParams","setSearchParams","searchValue","get","searchMovieForKeyword","e","preventDefault","query","target","input","value","useEffect","fetchList","fetchMovieForKeyword","movies","onSubmit","type","path","element"],"sourceRoot":""}