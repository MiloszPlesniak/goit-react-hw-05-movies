{"version":3,"file":"static/js/705.0a078452.chunk.js","mappings":"qOAoCA,UA/BiB,WACf,IAAMA,GAAWC,EAAAA,EAAAA,MAEXC,EAAOF,EAASG,SAAWH,EAASI,OAC1C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACGC,EAAAA,EAAAA,MADH,OACXJ,EADW,OAGjBC,EAASD,GAHQ,2CAAH,qDAKhBG,GAGD,GAAE,KAGD,0BACE,wBACGH,EAAMK,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACzB,OACE,SAAC,KAAD,CAAeC,GAAI,WAAaD,EAAIE,MAAO,CAAEd,KAAAA,GAA7C,UACE,wBAAKU,GAASC,KADLC,EAId,OAIR,C,0HCED,UA/BqB,WACnB,OAAoCT,EAAAA,EAAAA,UAAS,IAA7C,eAAOY,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SAE/BC,EAAqB,mCAAG,WAAMC,GAAN,uEAC5BA,EAAEC,iBACIC,EAAQF,EAAEG,OAAOC,MAAMC,MAC7BT,EAAgB,CAAEM,MAAAA,IAHU,2CAAH,sDAa3B,OARAnB,EAAAA,EAAAA,YAAU,WACR,IAAMuB,EAAS,mCAAG,qGACKC,EAAAA,EAAAA,IAAkBV,GADvB,OACVW,EADU,OAEhBf,EAAce,GAFE,2CAAH,qDAIfF,GACD,GAAE,CAACT,KAGF,4BACE,kBAAMY,SAAUV,EAAhB,WACE,kBAAOX,KAAK,WACZ,mBAAQsB,KAAK,SAAb,wBAEF,SAAC,KAAD,WACE,SAAC,KAAD,CAAOC,KAAK,IAAIC,SAAS,SAAC,UAAD,CAAWC,UAAWrB,UAItD,C,uKCjCKsB,EAAU,mCACH7B,EAAgB,mCAAG,oGACP8B,EAAAA,EAAAA,IACrB,yDAA2DD,GAF/B,cACxBE,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,qDAQhBC,EAAiB,mCAAG,WAAM9B,GAAN,uFACR0B,EAAAA,EAAAA,IACrB,sCAAwC1B,EAAK,YAAcyB,GAF9B,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAMjBV,EAAiB,mCAAG,WAAML,GAAN,uFACRa,EAAAA,EAAAA,IACrB,qDACED,EACA,UACAZ,GAL2B,cACzBc,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,sDASjBE,EAAuB,mCAAG,WAAO/B,EAAIqB,GAAX,uFACdK,EAAAA,EAAAA,IACrB,sCACE1B,EACA,IACAqB,EACA,YACAI,GAPiC,cAC/BE,EAD+B,yBAU9BA,EAASC,MAVqB,2CAAH,uD","sources":["pages/MovieList.jsx","pages/MoviesSearch.jsx","services/fetchMovie.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchFromApiList } from 'services/fetchMovie';\n\n\nconst MoveList = () => {\n  const location = useLocation();\n\n  const from = location.pathname + location.search;\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const movie = await fetchFromApiList();\n\n      setMovie(movie);\n    };\n    fetchMovie();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <ul>\n        {movie.map(({ title, name, id }) => {\n          return (\n            <Link key={id} to={'/movies/' + id} state={{ from }}>\n              <li>{title || name}</li>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default MoveList;\n\n\n","import { useState, useEffect } from 'react';\n\nimport { Route, Routes, useSearchParams } from 'react-router-dom';\nimport { fetchMovieByQuery } from 'services/fetchMovie';\nimport MovieList from './MovieList';\n\nconst MoviesSearch = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchValue = searchParams.get('query');\n\n  const searchMovieForKeyword = async e => {\n    e.preventDefault();\n    const query = e.target.input.value;\n    setSearchParams({ query });\n  };\n  useEffect(() => {\n    const fetchList = async () => {\n      const movies = await fetchMovieByQuery(searchValue);\n      setMoviesList(movies);\n    };\n    fetchList();\n  }, [searchValue]);\n\n  return (\n    <div>\n      <form onSubmit={searchMovieForKeyword}>\n        <input name=\"input\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <Routes>\n        <Route path=\"/\" element={<MovieList movieData={moviesList} />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default MoviesSearch;\n","import axios from 'axios';\n\nconst API_KEY = 'd9966d378d1934b9425ef6ee448d16ed';\nexport const fetchFromApiList = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day?api_key=' + API_KEY\n  );\n\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/movie/' + id + '?api_key=' + API_KEY\n  );\n  return response.data;\n};\nexport const fetchMovieByQuery = async query => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie?api_key=' +\n      API_KEY +\n      '&query=' +\n      query\n  );\n  return response.data.results;\n};\nexport const fetchMovieReviewsOrCast = async (id, type) => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/movie/' +\n      id +\n      '/' +\n      type +\n      '?api_key=' +\n      API_KEY\n  );\n\n  return response.data;\n};\n"],"names":["location","useLocation","from","pathname","search","useState","movie","setMovie","useEffect","fetchMovie","fetchFromApiList","map","title","name","id","to","state","moviesList","setMoviesList","useSearchParams","searchParams","setSearchParams","searchValue","get","searchMovieForKeyword","e","preventDefault","query","target","input","value","fetchList","fetchMovieByQuery","movies","onSubmit","type","path","element","movieData","API_KEY","axios","response","data","results","fetchMovieDetails","fetchMovieReviewsOrCast"],"sourceRoot":""}